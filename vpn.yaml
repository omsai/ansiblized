# https://github.com/ProtonVPN/linux-cli

- name: Install VPN
  hosts: localhost
  become: true
  vars:
    prefix: /opt/protonvpn-cli
    protonvpn: '{{ prefix }}/bin/protonvpn'
    protonvpn_watchdog: '{{ prefix }}/bin/protonvpn-watchdog'

  tasks:

    - name: Install protonvpn-cli dependencies
      apt:
        name:
          - dialog
          - netcat              # For watchdog.
          - openvpn
          - python-pexpect      # For ansible expect module.
          - python3-pip
          - python3-setuptools
          - python3-venv

    - name: Install protonvpn-cli
      pip:
        name: protonvpn-cli
        virtualenv_command: /usr/bin/python3 -m venv
        virtualenv: '{{ prefix }}'
        state: latest
      register: cli
      notify: Restart VPN service if necessary

    - name: Fail if manual configuration is necessary
      expect:
        command: '{{ protonvpn }} init'
        responses:
          overwrite: n
      changed_when: false
      # Ignore return code 2.
      register: init
      failed_when: '"overwrite" not in init.stdout'

    - name: Add VPN service file
      template:
        src: templates/protonvpn.service.j2
        dest: /etc/systemd/system/protonvpn.service
      notify: Restart VPN service if necessary

    - name: Add VPN service watchdog file
      template:
        src: templates/protonvpn-watchdog.j2
        dest: '{{ protonvpn_watchdog }}'
        mode: +x
      notify: Restart VPN service if necessary

    - name: Disable OpenVPN service
      service:
        name: openvpn
        state: stopped
        enabled: no

    - name: Enable and Start VPN service
      systemd:
        name: protonvpn
        state: started
        enabled: yes
        daemon_reload: yes
      register: just_started

  handlers:

    - name: Restart VPN service if necessary
      systemd:
        name: protonvpn
        state: restarted
        daemon_reload: yes
      when: cli.changed or not just_started.changed
